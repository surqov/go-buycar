services:
  app:
    image: "go-backend"
    depends_on:
      db:
        condition: service_healthy
        restart: true
      redis:
        condition: service_started
    environment:
      - DEBUG=${DEBUG}
    build: .
    volumes:
      - data:/data 
    ports:
      - "8080:8080"

  db: postgres
    restart: always
    user: postgres
    secrets:
      - db-password
    volumes:
      - data
    environment:
      - POSTGRES_DB=example
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
        healthcheck:
          test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
          interval: 10s
          retries: 5
          start_period: 30s
          timeout: 10s

  services:
    prometheus:
      image: prom/prometheus:latest
      container_name: prometheus
      ports:
        - "9090:9090" 
      volumes:
        - ./prometheus.yml:/etc/prometheus/prometheus.yml
      networks:
        - monitoring
      restart: always

    grafana:
      image: grafana/grafana:latest
      container_name: grafana
      ports:
        - "3000:3000"   # Expose Grafana UI
      environment:
        - GF_SECURITY_ADMIN_PASSWORD=admin  # Set default admin password
      depends_on:
        - prometheus
      networks:
        - monitoring
      restart: always

  networks:
    monitoring:
      driver: bridge

volumes:
  data: {} 
